{
  "version": 3,
  "sources": ["../../client-typescript/AliasesUI.ts"],
  "sourcesContent": ["import { App } from './app';\n\nexport class AliasesUI {\n    private app: App;\n    private aliasesList: HTMLElement | null = null;\n    private editFormContainer: HTMLElement | null = null;\n    private addAliasBtn: HTMLElement | null = null;\n    \n    constructor(app: App) {\n        this.app = app;\n        this.initializeUIElements();\n        this.initializeEventListeners();\n    }\n    \n    private initializeUIElements(): void {\n        this.aliasesList = document.getElementById('aliases-list');\n        this.editFormContainer = document.getElementById('alias-edit-form-container');\n        this.addAliasBtn = document.getElementById('add-alias');\n    }\n    \n    private initializeEventListeners(): void {\n        if (this.addAliasBtn) {\n            this.addAliasBtn.addEventListener('click', () => {\n                this.showEditForm(null, -1);\n            });\n        }\n    }\n    \n    // Load aliases from app settings into the UI\n    public loadAliases(): void {\n        if (!this.aliasesList || !this.app.settings.Aliases) {\n            return;\n        }\n        \n        // Clear existing list\n        this.aliasesList.innerHTML = '';\n        \n        // Clear edit form container\n        if (this.editFormContainer) {\n            this.editFormContainer.innerHTML = '';\n            this.editFormContainer.classList.remove('active');\n        }\n        \n        // Add each alias to the list\n        this.app.settings.Aliases.forEach((alias, index) => {\n            if(this.aliasesList === null)\n                return;\n            const row = document.createElement('tr');\n            row.dataset.index = index.toString();\n            \n            const aliasCell = document.createElement('td');\n            aliasCell.textContent = alias.alias;\n            row.appendChild(aliasCell);\n            \n            const commandCell = document.createElement('td');\n            commandCell.textContent = alias.command;\n            row.appendChild(commandCell);\n            \n            const actionCell = document.createElement('td');\n            \n            // Edit button\n            const editBtn = document.createElement('button');\n            editBtn.className = 'client-button';\n            editBtn.textContent = 'Edit';\n            editBtn.style.marginRight = '5px';\n            editBtn.addEventListener('click', () => {\n                this.showEditForm(alias, index);\n            });\n            \n            // Delete button\n            const deleteBtn = document.createElement('button');\n            deleteBtn.className = 'client-button';\n            deleteBtn.textContent = 'Delete';\n            deleteBtn.addEventListener('click', () => {\n                // Remove the alias\n                this.app.settings.Aliases.splice(index, 1);\n                \n                // Save settings and reload list\n                this.app.saveSettings();\n                this.loadAliases();\n            });\n            \n            actionCell.appendChild(editBtn);\n            actionCell.appendChild(deleteBtn);\n            row.appendChild(actionCell);\n            \n            this.aliasesList.appendChild(row);\n        });\n    }\n    \n    // Show edit form for adding or editing an alias\n    private showEditForm(alias: { alias: string, command: string } | null, index: number): void {\n        if (!this.editFormContainer) return;\n        \n        // Clear previous form content\n        this.editFormContainer.innerHTML = '';\n        \n        // Create the form content\n        const formTitle = document.createElement('h4');\n        formTitle.textContent = index === -1 ? 'Add New Alias' : 'Edit Alias';\n        this.editFormContainer.appendChild(formTitle);\n        \n        // Create alias input row\n        const aliasRow = document.createElement('div');\n        aliasRow.className = 'form-row';\n        \n        const aliasLabel = document.createElement('label');\n        aliasLabel.textContent = 'Alias:';\n        aliasLabel.setAttribute('for', 'edit-alias-input');\n        \n        const aliasInput = document.createElement('input');\n        aliasInput.type = 'text';\n        aliasInput.id = 'edit-alias-input';\n        aliasInput.value = alias ? alias.alias : '';\n        aliasInput.placeholder = 'e.g., n, sw, l';\n        \n        aliasRow.appendChild(aliasLabel);\n        aliasRow.appendChild(aliasInput);\n        this.editFormContainer.appendChild(aliasRow);\n        \n        // Create command input row\n        const cmdRow = document.createElement('div');\n        cmdRow.className = 'form-row';\n        \n        const cmdLabel = document.createElement('label');\n        cmdLabel.textContent = 'Command:';\n        cmdLabel.setAttribute('for', 'edit-alias-cmd-input');\n        \n        const cmdInput = document.createElement('input');\n        cmdInput.type = 'text';\n        cmdInput.id = 'edit-alias-cmd-input';\n        cmdInput.value = alias ? alias.command : '';\n        cmdInput.placeholder = 'e.g., north, southwest, look';\n        \n        cmdRow.appendChild(cmdLabel);\n        cmdRow.appendChild(cmdInput);\n        this.editFormContainer.appendChild(cmdRow);\n        \n        // Add a hint about aliases\n        const hintText = document.createElement('div');\n        hintText.innerHTML = '<small>Tip: Aliases let you type a shorter command that expands to a longer one. For example, use \"n\" for \"north\".</small>';\n        hintText.style.marginTop = '5px';\n        hintText.style.color = '#999';\n        this.editFormContainer.appendChild(hintText);\n        \n        // Create button row\n        const buttonRow = document.createElement('div');\n        buttonRow.className = 'button-row';\n        \n        // Save button\n        const saveBtn = document.createElement('button');\nsaveBtn.className = 'client-button';\n        saveBtn.textContent = 'Save';\n        saveBtn.addEventListener('click', () => {\n            if (index === -1) {\n                // Adding new alias\n                this.app.settings.Aliases.push({\n                    alias: aliasInput.value,\n                    command: cmdInput.value\n                });\n            } else {\n                // Updating existing alias\n                if (alias) {\n                    alias.alias = aliasInput.value;\n                    alias.command = cmdInput.value;\n                }\n            }\n            \n            // Save settings and reload\n            this.app.saveSettings();\n            this.loadAliases();\n        });\n        \n        // Cancel button\n        const cancelBtn = document.createElement('button');\ncancelBtn.className = 'client-button';\n        cancelBtn.textContent = 'Cancel';\n        cancelBtn.style.backgroundColor = '#555';\n        cancelBtn.addEventListener('click', () => {\n            this.editFormContainer!.innerHTML = '';\n            this.editFormContainer!.classList.remove('active');\n        });\n        \n        buttonRow.appendChild(saveBtn);\n        buttonRow.appendChild(cancelBtn);\n        this.editFormContainer.appendChild(buttonRow);\n        \n        // Show the form container\n        this.editFormContainer.classList.add('active');\n    }\n    \n    // Update UI elements\n    public updateUI(): void {\n        this.loadAliases();\n    }\n}"],
  "mappings": "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",
  "names": ["AliasesUI", "app", "alias", "index", "row", "aliasCell", "commandCell", "actionCell", "editBtn", "deleteBtn", "formTitle", "aliasRow", "aliasLabel", "aliasInput", "cmdRow", "cmdLabel", "cmdInput", "hintText", "buttonRow", "saveBtn", "cancelBtn"]
}
